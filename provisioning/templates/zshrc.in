# Path to your oh-my-zsh configuration.
ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="tonotdo"
# Example aliases

plugins=(git brew fabric lein pip python vagrant)

source $ZSH/oh-my-zsh.sh

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"
export PATH=~/bin:$PATH

# ssh
# export SSH_KEY_PATH="~/.ssh/id_rsa"
if [ -z "${STY}" -a -t 0 ]; then
    reattach () {
        if [ -n "${SSH_AUTH_SOCK}" ]; then
            ln -snf "${SSH_AUTH_SOCK}" "${HOME}/.ssh/agent-screen"
            SSH_AUTH_SOCK="${HOME}/.ssh/agent-screen" export SSH_AUTH_SOCK
        fi
        exec screen -A -D -RR ${1:+"$@"}
    }
fi

# Auto-screen invocation. see: http://taint.org/wk/RemoteLoginAutoScreen
# if we're coming from a remote SSH connection, in an interactive session
# then automatically put us into a screen(1) session.   Only try once
# -- if $STARTED_SCREEN is set, don't try it again, to avoid looping
# if screen fails for some reason.
if [ "$PS1" != "" -a "${STARTED_SCREEN:-x}" = x -a "${SSH_TTY:-x}" != x ]
then
  STARTED_SCREEN=1 ; export STARTED_SCREEN
  [ -d $HOME/lib/screen-logs ] || mkdir -p $HOME/lib/screen-logs
  sleep 1
  reattach && exit 0
  # normally, execution of this rc script ends here...
  echo "Screen failed! continuing with normal bash startup"
fi
# [end of auto-screen snippet]

export WORKON_HOME=/projects/.envs
export PROJECT_HOME=/projects/
source /usr/share/virtualenvwrapper/virtualenvwrapper.sh

alias ',rp'='source ~/.zshrc'
alias 'mkproject'='mkvirtualenv $1 -r /home/vagrant/.base-env/requirements.txt'
alias ',g'='git'
alias ',ga'='git add'
alias ',gap'='git add --patch'
alias ',gb'='git branch'
alias ',gba'='git branch -a'
alias ',gc'='git commit -v'
alias ',gca'='git commit -v -a'
alias ',gcl'='git config --list'
alias ',gcm'='git checkout master'
alias ',gco'='git checkout'
alias ',gcount'='git shortlog -sn'
alias ',gcp'='git cherry-pick'
alias ',gd'='git diff'
alias ',gf'='git ls-files | grep'
alias ',ggpnp'='git pull --rebase origin $(current_branch) && git push origin $(current_branch)'
alias ',ggpull'='git pull --rebase origin $(current_branch)'
alias ',ggpush'='git push origin $(current_branch)'
alias ',git-svn-dcommit-push'='git svn dcommit && git push github master:svntrunk'
alias ',glg'='git log --pretty=format:"%h %s" --graph'
alias ',glgg'='git log --graph --max-count=5'
alias ',glgga'='git log --graph --decorate --all'
alias ',globurl'='noglob urlglobber '
alias ',gl'='git log'
alias ',gm'='git merge'
alias ',gp'='git push'
alias ',gpoat'='git push origin --all && git push origin --tags'
alias ',gr'='git remote'
alias ',grh'='git reset HEAD'
alias ',grhh'='git reset HEAD --hard'
alias ',grmv'='git remote rename'
alias ',grrm'='git remote remove'
alias ',grset'='git remote set-url'
alias ',grt'='cd $(git rev-parse --show-toplevel || echo ".")'
alias ',grup'='git remote update'
alias ',grv'='git remote -v'
alias ',gsd'='git svn dcommit'
alias ',gsr'='git svn rebase'
alias ',gss'='git status -s'
alias ',gs'='git status'
alias ',gup'='git pull --rebase'
alias ',gups'='git stash && git pull --rebase && git stash apply'
alias ',gwc'='git whatchanged -p --abbrev-commit --pretty=medium'
alias ',greset'='git checkout --'
